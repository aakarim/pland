// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/aakarim/pland/ent/plan"
	"github.com/aakarim/pland/ent/schema"
	"github.com/aakarim/pland/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	planFields := schema.Plan{}.Fields()
	_ = planFields
	// planDescHasConflict is the schema descriptor for has_conflict field.
	planDescHasConflict := planFields[1].Descriptor()
	// plan.DefaultHasConflict holds the default value on creation for the has_conflict field.
	plan.DefaultHasConflict = planDescHasConflict.Default.(bool)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescBio is the schema descriptor for bio field.
	userDescBio := userFields[3].Descriptor()
	// user.BioValidator is a validator for the "bio" field. It is called by the builders before save.
	user.BioValidator = userDescBio.Validators[0].(func(string) error)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[4].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(time.Time)
}
