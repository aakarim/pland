// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package generated

import (
	"context"
	"time"

	"github.com/Khan/genqlient/graphql"
)

// CreatePlanCreatePlan includes the requested fields of the GraphQL type Plan.
type CreatePlanCreatePlan struct {
	Id        string    `json:"id"`
	Txt       string    `json:"txt"`
	Digest    string    `json:"digest"`
	Date      time.Time `json:"date"`
	Timestamp time.Time `json:"timestamp"`
}

// GetId returns CreatePlanCreatePlan.Id, and is useful for accessing the field via an interface.
func (v *CreatePlanCreatePlan) GetId() string { return v.Id }

// GetTxt returns CreatePlanCreatePlan.Txt, and is useful for accessing the field via an interface.
func (v *CreatePlanCreatePlan) GetTxt() string { return v.Txt }

// GetDigest returns CreatePlanCreatePlan.Digest, and is useful for accessing the field via an interface.
func (v *CreatePlanCreatePlan) GetDigest() string { return v.Digest }

// GetDate returns CreatePlanCreatePlan.Date, and is useful for accessing the field via an interface.
func (v *CreatePlanCreatePlan) GetDate() time.Time { return v.Date }

// GetTimestamp returns CreatePlanCreatePlan.Timestamp, and is useful for accessing the field via an interface.
func (v *CreatePlanCreatePlan) GetTimestamp() time.Time { return v.Timestamp }

// CreatePlanResponse is returned by CreatePlan on success.
type CreatePlanResponse struct {
	CreatePlan CreatePlanCreatePlan `json:"createPlan"`
}

// GetCreatePlan returns CreatePlanResponse.CreatePlan, and is useful for accessing the field via an interface.
func (v *CreatePlanResponse) GetCreatePlan() CreatePlanCreatePlan { return v.CreatePlan }

// __CreatePlanInput is used internally by genqlient
type __CreatePlanInput struct {
	Txt  string    `json:"txt"`
	Date time.Time `json:"date"`
}

// GetTxt returns __CreatePlanInput.Txt, and is useful for accessing the field via an interface.
func (v *__CreatePlanInput) GetTxt() string { return v.Txt }

// GetDate returns __CreatePlanInput.Date, and is useful for accessing the field via an interface.
func (v *__CreatePlanInput) GetDate() time.Time { return v.Date }

func CreatePlan(
	ctx context.Context,
	client graphql.Client,
	txt string,
	date time.Time,
) (*CreatePlanResponse, error) {
	req := &graphql.Request{
		OpName: "CreatePlan",
		Query: `
mutation CreatePlan ($txt: String!, $date: Time!) {
	createPlan(input: {txt:$txt,date:$date}) {
		id
		txt
		digest
		date
		timestamp
	}
}
`,
		Variables: &__CreatePlanInput{
			Txt:  txt,
			Date: date,
		},
	}
	var err error

	var data CreatePlanResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
