// Code generated by ent, DO NOT EDIT.

package header

import (
	"time"
)

const (
	// Label holds the string label denoting the header type in the database.
	Label = "header"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldTxt holds the string denoting the txt field in the database.
	FieldTxt = "txt"
	// EdgePlan holds the string denoting the plan edge name in mutations.
	EdgePlan = "plan"
	// Table holds the table name of the header in the database.
	Table = "headers"
	// PlanTable is the table that holds the plan relation/edge.
	PlanTable = "headers"
	// PlanInverseTable is the table name for the Plan entity.
	// It exists in this package in order to avoid circular dependency with the "plan" package.
	PlanInverseTable = "plans"
	// PlanColumn is the table column denoting the plan relation/edge.
	PlanColumn = "plan_header"
)

// Columns holds all SQL columns for header fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldTxt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "headers"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"plan_header",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
)
